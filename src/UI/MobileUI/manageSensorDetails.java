/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.MobileUI;

import Classes.farm.SetOfFarm;
import Classes.farm.farms;
import Classes.sensors.SetOfSensors;
import Classes.sensors.sensorDetails;
import java.awt.geom.RoundRectangle2D;
import Classes.serialization.Serialization;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Sachi
 */
public class manageSensorDetails extends javax.swing.JFrame {

    /**
     * Creates new form manageSensorDetails
     */
    String username, userLevel, email;
    public static SetOfFarm thefarms = new SetOfFarm();
    public static SetOfSensors theSensors = new SetOfSensors();
    public static SetOfSensors searchSensors = new SetOfSensors();
    public static final String FILE_NAME_Sensors = "DataFiles/Sensors.txt";
    public static final String FILE_NAME_farms = "DataFiles/farms.txt";
    public static String fieldID= "";
    public static String cropType= "";

    public manageSensorDetails() {
        initComponents();

        this.setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 95, 95));

    }

    public manageSensorDetails(String username, String userLevel, String email) {

        initComponents();
        this.username = username;
        this.userLevel = userLevel;
        this.email = email;

        this.setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 95, 95));

        try {
            for (farms farm : Serialization.deserializeFarm()) {
                thefarms.addfarm(farm);
                farm.print();
            }
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        try {
            for (sensorDetails sensorDetails : Serialization.deserializeSensors()) {
                theSensors.addSensorDetails(sensorDetails);
                sensorDetails.print();
            }
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        String values = "";

        for (farms farm : thefarms) {
            if (!values.contains(farm.getlocation())) {
                values = values + " " + farm.getlocation();
            }
        }
        String[] splited = values.split("\\s+");
        for (int i = 0; i < splited.length; i++) {
            System.out.println(splited[i]);
        }
        comboLocation.setSelectedItem("Select the Location");
        comboFarmer.setSelectedItem("Select a Farmer");
        comboFieldID.setSelectedItem("Select a Field");
        comboLocation.removeAllItems();
        comboLocation.addItem("Select the Location");
       comboFarmer.removeAllItems();
        comboFarmer.addItem("Select a Farmer");
        comboFieldID.removeAllItems();
        comboFieldID.addItem("Select a Field");
        loadCombo(comboLocation, splited);
    }

    /**
     *
     * @param combobox
     * @param values
     */
    public void loadCombo(JComboBox combobox, String[] values) {
                 
        for (int i = 2; i < values.length; i++) {
            combobox.addItem(values[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CropType = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        comboFieldID = new javax.swing.JComboBox();
        comboLocation = new javax.swing.JComboBox();
        comboFarmer = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CropType.setEditable(false);
        CropType.setBackground(new java.awt.Color(255, 255, 255));
        CropType.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        CropType.setForeground(new java.awt.Color(153, 153, 153));
        CropType.setText("Crop Type");
        CropType.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(CropType, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 200, 30));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IM/MobileImages/next.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/IM/MobileImages/next1.png"))); // NOI18N
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 100, 40));

        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, 20, 20));

        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 40, 30));

        comboFieldID.setForeground(new java.awt.Color(153, 153, 153));
        comboFieldID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboFieldIDMouseReleased(evt);
            }
        });
        getContentPane().add(comboFieldID, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 200, 30));

        comboLocation.setForeground(new java.awt.Color(153, 153, 153));
        comboLocation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboLocationMouseClicked(evt);
            }
        });
        getContentPane().add(comboLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 200, 30));

        comboFarmer.setForeground(new java.awt.Color(153, 153, 153));
        comboFarmer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboFarmerMouseClicked(evt);
            }
        });
        getContentPane().add(comboFarmer, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 200, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Select Farm Details");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 250, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IM/MobileImages/Adminandro.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked

        if(comboFieldID.getSelectedItem().toString().equals("Select a Field") || comboFarmer.getSelectedItem().toString().equals("Select a Farmer")
                || comboLocation.getSelectedItem().toString().equals("Select the Location") || CropType.getText().isEmpty() )
        {
             JOptionPane.showMessageDialog(this, "Please Provide all the necessary Details", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        fieldID=comboFieldID.getSelectedItem().toString();
        cropType=CropType.getText();
        enterSensorDetails e=new enterSensorDetails(username, userLevel, email);
        e.setVisible(true);
        this.hide();
        }
            
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     *
     */
    public void clear() {
        CropType.setText("");
        comboLocation.setSelectedItem("Select the Location");
        comboFarmer.setSelectedItem("Select a Farmer");
        comboFieldID.setSelectedItem("Select a Field");

        theSensors.removeAll(theSensors);

        try {
            for (sensorDetails sensorDetails : Serialization.deserializeSensors()) {
                theSensors.addSensorDetails(sensorDetails);
                sensorDetails.print();
            }
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        adminOptions a = new adminOptions(username, userLevel, email);
        a.setVisible(true);
        this.hide();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void comboLocationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboLocationMouseClicked
 String values = "a\nb\n";

        for (farms farm : thefarms) {
            if (farm.getlocation().equals(comboLocation.getSelectedItem().toString()) && !values.contains(farm.getfarmername())) {
                values = values + "\n" + farm.getfarmername();
            }
        }
        String[] splited = values.split("\\n+");
        for (int i = 0; i < splited.length; i++) {
            System.out.println(splited[i]);
        }
        
        comboFarmer.removeAllItems();
        comboFarmer.addItem("Select a Farmer");
        loadCombo(comboFarmer, splited);        
    }//GEN-LAST:event_comboLocationMouseClicked

    private void comboFieldIDMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboFieldIDMouseReleased
      String values = "";

        for (farms farm : thefarms) {
            String num = "" + farm.getfarmNumber();
            if (num.equals("" + comboFieldID.getSelectedItem().toString()) && !values.contains(farm.getfarmtype())) {
                values = values + farm.getfarmtype();
            }
        }
        CropType.setText(values);
        System.out.print(values); 
    }//GEN-LAST:event_comboFieldIDMouseReleased

    private void comboFarmerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboFarmerMouseClicked
String values = "\na\n";

        for (farms farm : thefarms) {

            if (farm.getlocation().equals(comboLocation.getSelectedItem().toString()) && farm.getfarmername().equals(comboFarmer.getSelectedItem().toString()) && !values.contains("" + farm.getfarmNumber())) {
                values = values + "\n" + farm.getfarmNumber();
            }
        }
        String[] splited = values.split("\\n+");
        for (int i = 0; i < splited.length; i++) {
            System.out.println(splited[i]);
        }
        comboFieldID.removeAllItems();
        comboFieldID.addItem("Select a Field");
        loadCombo(comboFieldID, splited);
        
    }//GEN-LAST:event_comboFarmerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageSensorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageSensorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageSensorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageSensorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageSensorDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CropType;
    private javax.swing.JComboBox comboFarmer;
    private javax.swing.JComboBox comboFieldID;
    private javax.swing.JComboBox comboLocation;
    private javax.swing.JLabel exit;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
